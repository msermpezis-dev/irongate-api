# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  detect-secrets:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: GitGuardian Secrets scan
        uses: GitGuardian/ggshield/actions/secret@main
        env:
          GITHUB_PUSH_BEFORE_SHA: ${{ github.event.before }}
          GITHUB_PUSH_BASE_SHA: ${{ github.event.base }}
          GITHUB_PULL_BASE_SHA: ${{ github.event.pull_request.base.sha }}
          GITHUB_DEFAULT_BRANCH: ${{ github.event.repository.default_branch }}
          GITGUARDIAN_API_KEY: ${{ secrets.GITGUARDIAN_API_KEY }}

  sbom-scan:
    runs-on: ubuntu-latest
    needs: detect-secrets
    steps:
    - uses: actions/checkout@v3
    - name: Generate Python SBOM
      uses: CycloneDX/gh-python-generate-sbom@v2
      id: sbom-scan
      with:
        input: ./requirements.txt
        output: ./bom.json
        format: json
    - name: Scan SBOM
      id: scan
      uses: anchore/scan-action@v3
      with:
        sbom: "./bom.json"
        fail-build: false
    - name: View Scan Report
      if: always()
      run: cat ${{ steps.scan.outputs.sarif }}

  sonarcloud:
    runs-on: ubuntu-latest
    needs: [ detect-secrets, sbom-scan ]
    steps:
      - uses: actions/checkout@v3
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0
      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  checkov:
    runs-on: ubuntu-latest
    needs: sonarcloud
    steps:
    - uses: actions/checkout@v3

    - name: Checkov GitHub Action
      uses: bridgecrewio/checkov-action@v12
      with:
        # This will add both a CLI output to the console and create a results.sarif file
        output_format: cli
        output_file_path: console
  build:
    runs-on: ubuntu-latest
    needs: sonarcloud
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10.13
      uses: actions/setup-python@v3
      with:
        python-version: "3.10.13"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest